/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/exercises": {
    /** Get all exercises */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["exercise.Exercise"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Create an exercise */
    post: {
      parameters: {
        body: {
          /** Create Exercise */
          exercise: definitions["exercise.CreateExerciseDto"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["exercise.Exercise"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/exercises/many": {
    /** Create many exercises */
    post: {
      parameters: {
        body: {
          /** Create Exercises */
          exercises: definitions["exercise.CreateExerciseDto"][];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["exercise.Exercise"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/exercises/type/{type}": {
    /** Get exercises by type */
    get: {
      parameters: {
        path: {
          /** Exercise Type */
          type: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["exercise.Exercise"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/exercises/{id}": {
    /** Get an exercise */
    get: {
      parameters: {
        path: {
          /** Exercise ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["exercise.Exercise"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Update an exercise */
    put: {
      parameters: {
        path: {
          /** Exercise ID */
          id: string;
        };
        body: {
          /** Update Exercise */
          exercise: definitions["exercise.UpdateExerciseDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["exercise.Exercise"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Delete an exercise */
    delete: {
      parameters: {
        path: {
          /** Exercise ID */
          id: string;
        };
      };
      responses: {
        /** No Content */
        204: {
          schema: unknown;
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/nutritions": {
    /** Get all nutritions */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["nutrition.Nutrition"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Create a nutrition */
    post: {
      parameters: {
        body: {
          /** Create Nutrition */
          nutrition: definitions["nutrition.CreateNutritionDto"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["nutrition.Nutrition"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/nutritions/user/{userid}": {
    /** Get nutritions by user */
    get: {
      parameters: {
        path: {
          /** User ID */
          userid: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["nutrition.Nutrition"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/nutritions/{id}": {
    /** Get a nutrition */
    get: {
      parameters: {
        path: {
          /** Nutrition ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["nutrition.Nutrition"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Update a nutrition */
    put: {
      parameters: {
        path: {
          /** Nutrition ID */
          id: string;
        };
        body: {
          /** Update Nutrition */
          nutrition: definitions["nutrition.UpdateNutritionDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["nutrition.Nutrition"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Delete a nutrition */
    delete: {
      parameters: {
        path: {
          /** Nutrition ID */
          id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/plans": {
    /** Get all plans */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Create a plan */
    post: {
      parameters: {
        body: {
          /** Create Plan */
          plan: definitions["plans.CreatePlanDto"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/plans/user/{user_id}": {
    /** Get a plan by user */
    get: {
      parameters: {
        path: {
          /** User ID */
          user_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/plans/user/{user_id}/{day}": {
    /** Get a plan by user and day */
    get: {
      parameters: {
        path: {
          /** User ID */
          user_id: string;
          /** Day of week */
          day: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Update a plan by user and day */
    put: {
      parameters: {
        path: {
          /** User ID */
          user_id: string;
          /** Day of week */
          day: string;
        };
        body: {
          /** Update Plan */
          plan: definitions["plans.UpdatePlanDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Delete a plan by user and day */
    delete: {
      parameters: {
        path: {
          /** User ID */
          user_id: string;
          /** Day of week */
          day: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/plans/{id}": {
    /** Get a plan */
    get: {
      parameters: {
        path: {
          /** Plan ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Update a plan */
    put: {
      parameters: {
        path: {
          /** Plan ID */
          id: string;
        };
        body: {
          /** Update Plan */
          plan: definitions["plans.UpdatePlanDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans.Plan"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Delete a plan */
    delete: {
      parameters: {
        path: {
          /** Plan ID */
          id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/users": {
    /** Get all users */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["user.User"][];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Create a user */
    post: {
      parameters: {
        body: {
          /** Create User */
          user: definitions["user.CreateUserDto"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["user.User"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/users/{id}": {
    /** Get a user */
    get: {
      parameters: {
        path: {
          /** User ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user.User"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
    /** Delete a user */
    delete: {
      parameters: {
        path: {
          /** User ID */
          id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/users/{id}/body": {
    /** Update a user body */
    patch: {
      parameters: {
        path: {
          /** User ID */
          id: string;
        };
        body: {
          /** UpdateBody User */
          user: definitions["user.UpdateBodyDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user.User"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
  "/users/{id}/usepass": {
    /** Update a user username and password */
    patch: {
      parameters: {
        path: {
          /** User ID */
          id: string;
        };
        body: {
          /** UpdateUsernamePassword User */
          user: definitions["user.UpadateUsernamePasswordDto"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user.User"];
        };
        /** Bad Request */
        400: {
          schema: unknown;
        };
      };
    };
  };
}

export interface definitions {
  "exercise.CreateExerciseDto": {
    description: string;
    image: string;
    muscle: string[];
    name: string;
    type: string[];
  };
  "exercise.Exercise": {
    description: string;
    id?: string;
    image: string;
    muscle: string[];
    name: string;
    type: string[];
  };
  "exercise.UpdateExerciseDto": {
    description?: string;
    image?: string;
    muscle?: string[];
    name?: string;
    type?: string[];
  };
  "nutrition.CreateNutritionDto": {
    /** @default 0 */
    calories?: number;
    /** @default 0 */
    carb?: number;
    created_at?: string;
    /** @default 0 */
    fat?: number;
    /** @default 0 */
    protein?: number;
    userid: string;
  };
  "nutrition.Nutrition": {
    /** @default 0 */
    calories?: number;
    /** @default 0 */
    carb?: number;
    created_at?: string;
    /** @default 0 */
    fat?: number;
    id?: string;
    /** @default 0 */
    protein?: number;
    userid: string;
  };
  "nutrition.UpdateNutritionDto": {
    calories?: number;
    carb?: number;
    fat?: number;
    protein?: number;
  };
  "plans.CreatePlanDto": {
    dayofweek: string;
    exercise?: string[];
    /** @default Rest */
    typeofplan?: string;
    userid: string;
  };
  "plans.Plan": {
    dayofweek: string;
    exercise?: string[];
    id?: string;
    typeofplan: string;
    userid: string;
  };
  "plans.UpdatePlanDto": {
    exercise?: string[];
    typeofplan?: string;
    userid?: string;
  };
  "user.CreateUserDto": {
    /**
     * @description default:"0" is not working
     * @default 0
     */
    activityLevel?: number;
    age: number;
    created_at?: string;
    gender: string;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    height?: number;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    hip?: number;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    neck?: number;
    password: string;
    username: string;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    waist?: number;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    weight?: number;
  };
  "user.UpadateUsernamePasswordDto": {
    newPassword?: string;
    password: string;
    username?: string;
  };
  "user.UpdateBodyDto": {
    activityLevel?: number;
    age?: number;
    gender?: string;
    height?: number;
    hip?: number;
    neck?: number;
    waist?: number;
    weight?: number;
  };
  "user.User": {
    /**
     * @description default:"0" is not working
     * @default 0
     */
    activitylevel?: number;
    age: number;
    created_at?: string;
    gender: string;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    height?: number;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    hip?: number;
    id?: string;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    neck?: number;
    password: string;
    username: string;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    waist?: number;
    /**
     * @description default:"0" is not working
     * @default 0
     */
    weight?: number;
  };
}

export interface operations {}

export interface external {}
